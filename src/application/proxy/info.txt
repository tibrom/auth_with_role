1 Принимать соединения (значит надо сделать трейт, который возвращает некоторуб структуру с данными соединения)
 

На каждое соединение

Два различных use case
1) web socket
2) http

Для web socket
1) State INIT (Сборка метаданных подключения и авторизация)
1.1) создаем модель соединения 
1.2) Проверяем  авторизацию входящего подключения
1.3) Создаем JWT токен
1.4) Добавляем токен в метаданные

2) State RUN

2.1) Запускает сопроцес проксирования с собранными в 1 метаданными
2.2) Сохраняем ручку проксирования в пямяти, чтоб можно было управлять сопроцессом по  UUID
2.3) При каждом запросе от клиента проверяем, авторизацию, если надо обновляем токен

3) State Stopping
3.1 Останавлиаем подключение
3.2 Удаляем метаданных подключения


Для http

1) State INIT (Сборка метаданных подключения и авторизация)

1.1) создаем модель соединения 
1.2) Проверяем  авторизацию входящего подключения
1.3) Создаем JWT токен
1.4) Добавляем токен в метаданные

2) State RUN

2.1) Запускает сопроцес проксирования с собранными в 1 метаданными
2.2) Сохраняем ручку проксирования в пямяти, чтоб можно было управлять сопроцессом по  UUID
2.3) При каждом запросе от клиента проверяем, авторизацию, если надо обновляем токен

3) State Stopping
3.1 Останавлиаем подключение
3.2 Удаляем метаданных подключения

